apiVersion: v1
kind: ConfigMap
metadata:
  name: cobros-proxy
  namespace: sites
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    
    events {
        worker_connections  1024;
    }
    
    http {
      include       mime.types;
      default_type  application/octet-stream;
      include /etc/nginx/virtualhost/virtualhost.conf;
    }
  virtualhost.conf: |
     server {
       listen 80;
       listen 443 ssl;
       server_name crcobrosuat005.akros.tech;
       
       ssl_certificate           /etc/nginx/certs/wildcard_akros_tech.crt;
       ssl_certificate_key       /etc/nginx/certs/wildcard_akros_tech.key;
       ssl_protocols             TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
       ssl_ciphers               HIGH:!aNULL:!MD5;
       
       location / {
           proxy_http_version 1.1;
           proxy_pass http://cobroscr:80;
       }
   }
   
   server {
       listen 80;
       listen 443 ssl;
       server_name svcobrosuat005.akros.tech;
       
       ssl_certificate           /etc/nginx/certs/wildcard_akros_tech.crt;
       ssl_certificate_key       /etc/nginx/certs/wildcard_akros_tech.key;
       ssl_protocols             TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
       ssl_ciphers               HIGH:!aNULL:!MD5;
       
       location / {
           proxy_http_version 1.1;
           proxy_pass http://cobrossv:80;
       }
   }
   
   server {
       listen 80;
       listen 443 ssl;
       server_name gtcobrosuat005.akros.tech;
       
       ssl_certificate           /etc/nginx/certs/wildcard_akros_tech.crt;
       ssl_certificate_key       /etc/nginx/certs/wildcard_akros_tech.key;
       ssl_protocols             TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
       ssl_ciphers               HIGH:!aNULL:!MD5;
       
       location / {
           proxy_http_version 1.1;
           proxy_pass http://cobrosgt:80;
       }
   }
   
   server {
       listen 80;
       listen 443 ssl;
       server_name nicobrosuat005.akros.tech;
       
       ssl_certificate           /etc/nginx/certs/wildcard_akros_tech.crt;
       ssl_certificate_key       /etc/nginx/certs/wildcard_akros_tech.key;
       ssl_protocols             TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
       ssl_ciphers               HIGH:!aNULL:!MD5;
       
       location / {
           proxy_http_version 1.1;
           proxy_pass http://cobrosni:80;
       }
   }
   server {
       listen 80;
       listen 443 ssl;
       server_name mxcobrosuat005.akros.tech;
   
   ssl_certificate           /etc/nginx/certs/wildcard_akros_tech.crt;
   ssl_certificate_key       /etc/nginx/certs/wildcard_akros_tech.key;
   ssl_protocols             TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
   ssl_ciphers               HIGH:!aNULL:!MD5;
   
       location / {
           proxy_http_version 1.1;
           proxy_pass http://cobrosmx:80;
       }
   }
   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
                     
   access_log  /var/log/nginx/access.log  main;
   
   sendfile        on;
   keepalive_timeout  65;
   include /etc/nginx/conf.d/*.conf;
    
    
    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cobros-nginx
  namespace: sites
  labels:
    deploy: cobros-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cobros-proxy
  template:
    metadata:
      labels:
        app: cobros-proxy
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name: cobros-proxy
          image:  nginx:latest
          volumeMounts:
           - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
             readOnly: true
             name: nginx-conf
           - mountPath: /etc/nginx/certs
             readOnly: true
             name: nginx-certs-tls
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
          
      volumes:
      - name: nginx-conf
        configMap:
          name: cobros-proxy   # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: nginx.conf
              path: nginx.conf
            - key: virtualhost.conf
              path: virtualhost/virtualhost.conf # dig directory
      - name: nginx-certs-tls
        secret:
          secretName: sites-tls
          items:
            - key: tls.key
              path: wildcard_akros_tech.key
            - key: tls.crt
              path: wildcard_akros_tech.crt
              
 ---             
apiVersion: v1
kind: Service
metadata:
  name: cobros-nginx-service
  namespace: sites
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: cobros-proxy
  ports:
    - protocol: TCP
      name: https
      port: 443
      targetPort: 443
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80